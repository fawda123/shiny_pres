\documentclass[serif]{beamer}
\usetheme{EPA}
\usepackage{graphicx}
\usepackage{xcolor}
\usepackage{tikz}
\usetikzlibrary{shadows,arrows,positioning}

\newcommand{\emtxt}[1]{\textbf{\textit{#1}}}

\tikzstyle{block} = [rectangle, draw, text width=7em, text centered, rounded corners, minimum height=3em, minimum width=7em, top color = white, bottom color=brown!30,  drop shadow]

% knitr setup
<<setup, include = F, cache = F>>=
# set global chunk options
opts_chunk$set(fig.path='fig/', fig.align='center', fig.show='hold',message=F,results='asis',dev='pdf',dev.args=list(family='serif'),fig.pos='!ht',warning=F)
options(replace.assign=T,digits=1)
@
  
\begin{document}

\title[Shiny Overview]{\textbf{An overview of Shiny applications using R and RStudio}\vspace{-0.15in}}
\author[M. Beck]{Marcus W. Beck\inst{1}}

\institute[USEPA]{\inst{1} USEPA National Health and Environmental Effects Research Laboratory, Gulf Ecology Division, \href{mailto:beck.marcus@epa.gov}{beck.marcus@epa.gov}}

\date{Dec. 10, 2015}

%%%%%%
\begin{frame}
\titlepage
\end{frame}

%%%%%%
\begin{frame}{Who am I?}
\begin{itemize}
\item ORISE post-doc for 2.5 years, fed postdoc since last week \\~\\
\item NHEERL Gulf Ecology Division \\~\\
\item Research focus on water quality assessment and indicator development \\~\\
\item Specific interests in statistical modelling, data assimilation, graphics  \\~\\
\end{itemize}
\end{frame}

%%%%%%
\begin{frame}{Who am I?}
\begin{itemize}
\item R user since 2007 \\~\\
\item Maintainer of two packages on CRAN: \\~\\
\end{itemize}
\begin{columns}[T]
\begin{column}{0.45\textwidth}
\emtxt{SWMPr}\\~\\
Tools for retrieving, organizing, and analyzing data from the System Wide Monitoring Program of the National Estuarine Research Reserve System. 
\end{column}
\begin{column}{0.45\textwidth}
\emtxt{NeuralNetTools} \\~\\
Visualization and analysis tools to aid in the interpretation of neural network models
\end{column}
\end{columns}
\end{frame}

%%%%%%
\begin{frame}{Reproducible research workflow}
General workflow for \emtxt{reproducible research} - reproduce results from an experiment or analysis conducted by another.\\~\\
From Wikipedia... `The ultimate product is the \emtxt{paper along with the full computational environment} used to produce the results in the paper such as the code, data, etc. that can be \emtxt{used to reproduce the results and create new work} based on the research.'\\~\\
\begin{columns}
\begin{column}{0.25\textwidth}
\centerline{\includegraphics[width = \textwidth]{fig/Rlogo.png}}
\end{column}
\begin{column}{0.25\textwidth}
\centerline{\includegraphics[width = \textwidth]{fig/RStudio.png}}
\end{column}
\begin{column}{0.25\textwidth}
\centerline{\includegraphics[width = \textwidth]{fig/knit-logo.png}}
\end{column}
\begin{column}{0.25\textwidth}
\centerline{\includegraphics[width = \textwidth]{fig/octocat.png}}
\end{column}
\end{columns}
\end{frame}

%%%%%%
\begin{frame}{Reproducible research workflow}
\begin{columns}
\begin{column}{0.23\textwidth}
\centerline{\includegraphics[width = \textwidth]{fig/Rlogo.png}}
\end{column}
\begin{column}{0.23\textwidth}
\centerline{\includegraphics[width = \textwidth]{fig/RStudio.png}}
\end{column}
\begin{column}{0.23\textwidth}
\centerline{\includegraphics[width = \textwidth]{fig/knit-logo.png}}
\end{column}
\begin{column}{0.23\textwidth}
\centerline{\includegraphics[width = \textwidth]{fig/octocat.png}}
\end{column}
\end{columns}
\vspace{0.2in}
The use of these tools increases transparency and transfer of information \emtxt{= better science}\\~\\
Data prep, analysis, report, and sharing can all be done in RStudio IDE
\end{frame}

%%%%%%
\begin{frame}{Introduction to Shiny}
Where does Shiny fit with reproducible research? \\~\\
Shiny is a web application framework for R \\~\\
\begin{columns}
\begin{column}{0.7\textwidth}
\begin{itemize}
\item From the command line to a graphical user interface 
\item Make your code interactive 
\item Do not need to know anything about web programming
\item Integrated very well with R studio \\~\\
\end{itemize}
\end{column}
\begin{column}{0.2\textwidth}
\centerline{\includegraphics[width = \textwidth]{fig/shiny_logo.png}}
\end{column}
\end{columns}
\vspace{0.16in}
Tools like Shiny improve \emtxt{accessibility} and \emtxt{communication} 
\end{frame}

%%%%%%
\begin{frame}{Introduction to Shiny}
A minimal working example...\\~\\
\begin{center}
\includegraphics<1>[width = 0.7\textwidth]{fig/mwe1.png}
\includegraphics<2>[width = 0.7\textwidth]{fig/mwe2.png}
\includegraphics<3>[width = 0.7\textwidth]{fig/mwe3.png}
\includegraphics<4>[width = 0.7\textwidth]{fig/mwe4.png}
\end{center}
\end{frame}

%%%%%%
\begin{frame}[t]{Introduction to Shiny}
What's under the hood? Two files... \emtxt{server.R}\\~\\
\centerline{\includegraphics[width = 0.65\textwidth]{fig/serverex.png}}
\end{frame}

%%%%%%
\begin{frame}[t]{Introduction to Shiny}
What's under the hood? Two files... \emtxt{ui.R}\\~\\
\centerline{\includegraphics[width = 0.65\textwidth]{fig/uiex.png}}
\end{frame}

%%%%%%
\begin{frame}[t]{Introduction to Shiny}
The files contain only R code! \\~\\
\begin{itemize}
\item \emtxt{server.R}: Contains instructions to build the app, e.g., plots, functions, etc.\\~\\
\item \emtxt{ui.R}: Controls the layout and appearance of the app, i.e., panel types, widgets, etc. \\~\\
\end{itemize}
Executing a Shiny app will run both scripts, user input to \emtxt{ui.R} sent to \emtxt{server.R}, output from \emtxt{server.R} sent to \emtxt{ui.R} for display
\end{frame}

%%%%%%
\begin{frame}[t, fragile]{Introduction to Shiny}
Step 1: User input to \emtxt{ui.R}, `bins'
\small
<<eval = F>>=
sliderInput("bins",
            "Number of bins:",
            min = 1,
            max = 50,
            value = 30)
@
\begin{center}
\includegraphics[width = \textwidth]{fig/sliderinput.png}
\end{center}
\end{frame}

%%%%%%
\begin{frame}[t, fragile]{Introduction to Shiny}
Step 2: Input from \emtxt{ui.R} sent to \emtxt{server.R}, executed
\small
<<eval = F>>=
# generate bins based on input$bins from ui.R
x <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)

# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white')
@
\normalsize
Step 3: Output from \emtxt{server.R} sent to \emtxt{ui.R}, plotted on app
\small
<<eval = F>>=
plotOutput("distPlot")
@
\normalsize
Step 4: Rinse and repeat
\end{frame}

%%%%%%
\begin{frame}{Introduction to Shiny}
This style of programming and execution is \emtxt{reactive} - re-executes automaticallly when inputs change \\~\\
This has tremendous value: \\~\\
\begin{itemize}
\item Quick code execution after initial setup \\~\\
\item Ease of use for others given application infrastructure \\~\\
\item Ease of use for the developer - no knowledge of web programming needed
\end{itemize}
\end{frame}

%%%%%%
\begin{frame}[t]{Introduction to Shiny}
Shiny applications are very flexible: \href{http://shiny.rstudio.com/gallery/widget-gallery.html}{widgets}
\begin{center}
\includegraphics[width = \textwidth]{fig/widgets.png}
\end{center}
\end{frame}

%%%%%%
\begin{frame}[t]{Introduction to Shiny}
Shiny applications are very flexible: outputs
\begin{center}
\includegraphics[width = \textwidth]{fig/outputs.png}
\end{center}
\end{frame}

%%%%%
\begin{frame}[t]{Introduction to Shiny}
Shiny applications are very flexible: use of HTML or Javascipt libraries \\~\\
\begin{itemize}
\item Refined layouts: shinydashboard, \href{http://www.htmlwidgets.org/}{htmlwidgets}, \href{https://ebailey78.github.io/shinyBS/}{shinyBS} \\~\\
\item Interacive graphics: dygraphs, metricsgraphics, \href{https://plot.ly/r/shiny-tutorial/}{plotly} \\~\\
\item Mapping: \href{https://rstudio.github.io/leaflet/}{leaflet} \\~\\
\end{itemize}
Use of these libraries can create applications comparable to any other web application for data viz
\end{frame}

%%%%%%
\begin{frame}[t, fragile]{Introduction to Shiny}
Apps are easily shared: \href{http://www.shinyapps.io/}{http://www.shinyapps.io/} \\~\\
Sign up for free account, push local shiny applications to a server, share URL
<<eval = F>>=
library(shinyapps)
deployApp()
@

\end{frame}

%%%%%%
% types of ui, dashboard, htmlwidgets
% deploying an app
% examples
\end{document}